// generated by Fast Light User Interface Designer (fluid) version 1.0302

#ifndef simguifltk_h
#define simguifltk_h
#include <FL/Fl.H>
#include "datasource.h"
#include <FL/Fl_Double_Window.H>
#include <FL/Fl_Menu_Bar.H>
#include <FL/Fl_Group.H>
#include <FL/Fl_Dial.H>
#include <FL/Fl_Value_Output.H>
#include <FL/Fl_Check_Button.H>
#include <FL/Fl_Check_Browser.H>
#include <FL/Fl_Input.H>
#include <FL/Fl_Button.H>

class SimGenGui_Fltk {
public:
  SimGenGui_Fltk();
  Fl_Double_Window *w;
  static Fl_Menu_Item menu_[];
private:
  inline void cb_Quit_i(Fl_Menu_*, void*);
  static void cb_Quit(Fl_Menu_*, void*);
public:
  Fl_Dial *simval_rpm;
private:
  inline void cb_simval_rpm_i(Fl_Dial*, void*);
  static void cb_simval_rpm(Fl_Dial*, void*);
public:
  Fl_Dial *simval_throttlepos;
private:
  inline void cb_simval_throttlepos_i(Fl_Dial*, void*);
  static void cb_simval_throttlepos(Fl_Dial*, void*);
public:
  Fl_Dial *simval_maf;
private:
  inline void cb_simval_maf_i(Fl_Dial*, void*);
  static void cb_simval_maf(Fl_Dial*, void*);
public:
  Fl_Dial *simval_vss;
private:
  inline void cb_simval_vss_i(Fl_Dial*, void*);
  static void cb_simval_vss(Fl_Dial*, void*);
public:
  Fl_Dial *simval_temp;
private:
  inline void cb_simval_temp_i(Fl_Dial*, void*);
  static void cb_simval_temp(Fl_Dial*, void*);
public:
  Fl_Value_Output *output_rpm;
  Fl_Value_Output *output_throttlepos;
  Fl_Value_Output *output_temp;
  Fl_Value_Output *output_maf;
  Fl_Value_Output *output_vss;
  Fl_Check_Button *dtc_report;
  Fl_Check_Button *dtc_mil;
  Fl_Check_Browser *dtc_list;
private:
  inline void cb_dtc_list_i(Fl_Check_Browser*, void*);
  static void cb_dtc_list(Fl_Check_Browser*, void*);
public:
  Fl_Input *dtc_addcode;
private:
  inline void cb_Add_i(Fl_Button*, void*);
  static void cb_Add(Fl_Button*, void*);
public:
  void show();
  void configure_widget(Fl_Dial *w, const char *name);
  unsigned long supportedpids_00; 
  unsigned long supportedpids_20; 
  unsigned long supportedpids_40; 
  unsigned long supportedpids_60; 
  void addSupportedCommand(const char *columnname);
  void dtc_removeunchecked(Fl_Check_Browser *brows);
};
const char * guifltk_simgen_name();
const char * guifltk_simgen_longdesc();
int guifltk_simgen_create(void **gen, const char *seed);
void guifltk_simgen_destroy(void *gen);
int guifltk_simgen_getvalue(void *gen, unsigned int mode, unsigned int PID, unsigned int *A, unsigned int *B, unsigned int *C, unsigned int *D);
int guifltk_simgen_idle(void *gen, int idlems);
int guifltk_simgen_clearerrorcodes(void *gen);
int guifltk_simgen_geterrorcodes(void *gen, unsigned int *errorcodes, int num_codes, int *mil);
#endif
